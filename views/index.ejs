<!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
  </head>
  <body>
    <h1><%= title %></h1>
    <p>Welcome to <%= title %></p>

    <form name="contacts" action="/" method="post">
        <input type ='text' name="username" placeholder="Name"/>
        <input type="email"  name="email" placeholder="Email"/>
        <button data-valueID ="5" id ="post">Post data</button>
        <button id="getByEmail">Get By Email</button>
        <button id="get">Get All</button>
    </form>



    <div class = 'update' data-id="" contenteditable="true">
        <p class ='pName'></p>
        <p class = 'pEmail'></p>
        <button class = "delete" data-uid ="">Delete</button>
        <button class = "update" data-uid="">Update</button>
    </div>



  <script>
      var oid;
      function ContactService(){

      };

      ContactService.prototype.create = function(object){
         makeAjaxCall('/contacts', 'POST', object, done);

      };

      ContactService.prototype.get = function(id){
          //get id //in reality passing an email to search
          makeAjaxCall('/contacts/'+id,'GET', null, done);
      };

      ContactService.prototype.getAll = function(){
          makeAjaxCall('/contacts', 'GET', null, done);
      };

      ContactService.prototype.update = function(id, object){
          console.log('Update key fired!');
          makeAjaxCall('/contacts/'+id, 'PUT', object, done);
      };

      ContactService.prototype.delete = function(id){
          makeAjaxCall('/contacts/'+id, 'DELETE', null, done);
      };

      /*Some Callback*/
      function done(){
          console.log("Done..");
      };



      function makeAjaxCall(url, HttpVerb, Object, callback){
          var xhr = new XMLHttpRequest();
          xhr.open(HttpVerb, url); //get or post or any other verb
          // if the httpVerb is post, modify the request header - content-type, xhr.send(JSON.stringify(obj))
          if(HttpVerb == 'POST' || HttpVerb == 'PUT' && typeof Object != null){
              //set the request header
              xhr.setRequestHeader('content-type', 'application/json');
          }
            xhr.addEventListener('readystatechange',function(){
                if(xhr.readyState === 4){
                    if (xhr.status == 200) {
                        callback(xhr);
                        var  data = xhr.responseText;
                        var jsonResponse = JSON.parse(data);
                        if(HttpVerb === 'POST') createDiv(jsonResponse);
                    }
                }
            });

          if(HttpVerb == 'POST' || HttpVerb == 'PUT')  xhr.send(JSON.stringify(Object));
          if(HttpVerb == 'GET') xhr.send();
          if(HttpVerb == 'DELETE') xhr.send();

      }


      function createDiv(object){

          var div  = document.querySelector('div.update');
          var pName = document.querySelector('p.pName');
          var pEmail = document.querySelector('p.pEmail');
          pName.innerHTML = "";
          pEmail.innerHTML = "";

          var name = object["name"];
          var email = object["email"];
          pName.innerHTML = name;
          pEmail.innerHTML = email;

          div.dataset.id = object["_id"];

          var del = document.querySelector('button.delete');
          del.dataset.uid = object["_id"];
          var update = document.querySelector('button.update');
          update.dataset.uid = object["_id"];

      };

      function createElement(elementType, parent, className, innerHTML, custom) {
         var element = document.createElement(elementType);
         if (parent) parent.appendChild(element);
         if (className) element.className = className;
         if (innerHTML) element.innerHTML = innerHTML;
         if (typeof custom !== 'undefined') {
             for (var prop in custom) {
                 element.setAttribute(prop, custom[prop]);
             }
         }
         return element;
      }

      document.addEventListener('DOMContentLoaded',function(){

          var forms  = document.forms.contacts;
          forms.addEventListener('click', function(event){
             //prevent default on event
              event.preventDefault();
          });

          /*Event Listener for Post method*/
          var button = document.querySelector('#post');
          button.addEventListener('click', function(){
              var usernameIn = forms.username.value;
              var emailIn = forms.email.value;

              //for create //use the same param name as the one in contact model
              var contactObject = {name : usernameIn, email: emailIn};
              var cs = new ContactService();
              cs.create(contactObject);

          });

          /*Event Listener for get All method*/
          var getButton = document.querySelector('#get');
          getButton.addEventListener('click',function(){
              console.log("Inside the get button");
              var cs = new ContactService();
              cs.getAll();
          });

          /*Event Listener for delete method*/
          var del = document.querySelector('button.delete');
          del.addEventListener('click',function(){
              console.log('delete event listener');
              var cs = new ContactService();
              if(del.dataset.uid!=="") cs.delete(del.dataset.uid);
              else console.log('not fired!');
          });

          /*Event Listener for update method*/

          var update = document.querySelector('button.update');
          update.addEventListener('click',function(){
              console.log('update event listener');
              var cs = new ContactService();
              var pName = document.querySelector('p.pName');
              var pEmail = document.querySelector('p.pEmail');
              //create an updated object to pass to put
              var obj ={};
              obj.name = pName.innerHTML;
              obj.email = pEmail.innerHTML;
              if(update.dataset.uid!=="") cs.update(update.dataset.uid, obj);
              else console.log('not fired!');
          });


          /*Event listener for the get by email method*/
          var getByEmail = document.querySelector('#getByEmail');
          console.log(getByEmail);
          getByEmail.addEventListener('click',function(){
              console.log('get by email event listener');
              var cs = new ContactService();
              var email = document.forms.contacts.email.value;
              cs.get(email);
          });

      });
  </script>
  </body>
</html>
